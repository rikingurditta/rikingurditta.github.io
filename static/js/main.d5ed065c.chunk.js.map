{"version":3,"sources":["images/origami elephant cropped.jpg","images/suzanne on fire.png","images/02_doughnut_end_of_lvl_2.png","components/FullPageRow.js","pages/Homepage.js","components/TitleRow.js","TSRegex/js/compiletest.js","TSRegex/js/NSet.js","TSRegex/js/NFA.js","TSRegex/js/Regex.js","TSRegex/js/Lexical.js","pages/Projects.js","components/Expandable.js","components/GlobalNavbar.js","components/Footer.js","components/ScrollToTop.js","App.js","pages/Experience.js","pages/Academics.js","serviceWorker.js","index.js"],"names":["module","exports","FullPageRow","props","Row","className","style","minHeight","padding","children","Homepage","Container","fluid","Col","md","lg","textAlign","src","origami_elephant","alt","width","backgroundColor","span","order","to","push","suzanne","TitleRow","NSet","set2","this","size","item","has","forEach","add","Set","NFAState","name","transitionDict","accepting","symbol","state","NFA","start","states","w","currentStates","doAllEpsilonTransitions","nextStates","i","length","transitionStates","result","stateNames","out","other","getAcceptingStates","addTransition","addAll","transition","tempStates","equals","union","names","Regex","Error","count","RESymbol","reject","accept","REConcat","reList","subs","startState","x","append","getNFA","RERepeat","regex","minNum","maxNum","inside","orList","concatList","j","REOr","REStar","insideNFA","curr","specialChars","numChars","allCharsArr","String","fromCharCode","allCharsRe","alphaNumericArr","char","alphaNumericRe","numsArr","Token","numsRe","Curly","Square","Paren","Repeat","Star","Or","Caret","End","Escape","brackets","forward","forwardToBack","digits","soundcloud_div_style","fontSize","color","lineBreak","wordBreak","overflow","whiteSpace","textOverflow","fontFamily","fontWeight","Expandable","useState","expanded","setExpanded","onClick","cursor","textDecoration","outside","hidden","GlobalNavbar","bgAlpha","document","addEventListener","window","scrollY","setState","console","log","Navbar","sticky","expand","Brand","as","Link","Toggle","aria-controls","Collapse","id","Nav","sitePages","map","page","path","key","Component","Footer","href","height","viewBox","version","aria-hidden","fillRule","d","xmlns","data-supported-dps","focusable","fill","y","rx","ScrollToTop","pathname","useLocation","useEffect","scrollTo","pages","component","startRe","justLoaded","setJustLoaded","accepted","setAccepted","inputRegex","setInputRegex","inputText","setInputText","updateAccepted","text","s","curly","stack","pop","wellFormedBrackets","nfa","compile","str","captures","orGroups","currOut","escape","charAt","parseInt","negate","substring","split","repeatMin","repeatMax","depth","end","sub","group","checkString","target","value","onChange","event","newRe","frameBorder","allow","allowFullScreen","scrolling","title","doughnut","App","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d5ed065c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/origami elephant cropped.8ae59f43.jpg\";","module.exports = __webpack_public_path__ + \"static/media/suzanne on fire.2238462e.png\";","module.exports = __webpack_public_path__ + \"static/media/02_doughnut_end_of_lvl_2.7d8c2eab.png\";","import Row from \"react-bootstrap/Row\";\nimport React from \"react\";\n\nexport default function FullPageRow(props) {\n    return (\n        <Row {...props} className={\"justify-content-md-center \" + props.className}\n             style={{...props.style, minHeight: 'calc(100vh - 56px)', padding: '25px 0 25px 0'}}>\n            {props.children}\n        </Row>\n    );\n}","import React from 'react';\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport FullPageRow from \"../components/FullPageRow\";\nimport origami_elephant from \"../images/origami elephant cropped.jpg\";\nimport suzanne from \"../images/suzanne on fire.png\";\nimport {Link} from \"react-router-dom\";\n\nexport default function Homepage() {\n    return (\n        <Container fluid>\n            <FullPageRow>\n                <Col md={5} lg={4} className=\"my-auto\">\n                    <h1>Hi, I'm Rikin</h1>\n                    <p>\n                        I'm a computer science and mathematics undergrad at University of Toronto. I'm interested in\n                        computer graphics, music production, topology, video games, Rubik's cubes, and cycling.\n                    </p>\n                </Col>\n                <Col md={5} lg={4} className=\"my-auto\" style={{textAlign: 'center'}}>\n                    <img src={origami_elephant}\n                         alt=\"elephant\"\n                         style={{width: '80%'}}/>\n                </Col>\n            </FullPageRow>\n            <FullPageRow style={{backgroundColor: '#FFEEEE'}}>\n                <Col md={4} lg={{span: 4, order: 2}} className=\"my-auto\">\n                    <h2>What I'm up to</h2>\n                    <p>\n                        Usually, I'm organizing UTCG events, setting monkeys on fire in Blender, making beats, thinking\n                        about 4 dimensional spaces, learning abstract algebra, and listening to beep boop music.\n                        <br/>\n                        <Link to=\"/projects\" push>Check out my projects!</Link>\n                    </p>\n                </Col>\n                <Col md={4} lg={{span: 4, order: 1}} className=\"my-auto\" style={{textAlign: 'center'}}>\n                    <img src={suzanne} style={{width: '80%'}} alt=\"image goes here\"/>\n                </Col>\n            </FullPageRow>\n        </Container>\n    )\n}","import Row from \"react-bootstrap/Row\";\nimport React from \"react\";\n\nexport default function TitleRow(props) {\n    return (\n        <Row {...props} className={\"justify-content-md-center \" + props.className} style={{...props.style, minHeight: '30vh'}}>\n            {props.children}\n        </Row>\n    );\n}","import NSet from './NSet';\nimport { RESymbol, REConcat, RERepeat, REStar, REOr } from './Regex';\nconst specialChars = new NSet(\".{}[]()?+*|^$\\\\\");\nconst numChars = new NSet(\"1234567890\");\nconst allCharsArr = []; // array of symbol regexes for each ASCII char\nfor (let i = 32; i <= 127; i++)\n    allCharsArr.push(new RESymbol(String.fromCharCode(i)));\nconst allCharsRe = new REOr(allCharsArr);\nconst alphaNumericArr = [];\nfor (let char of \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890\")\n    alphaNumericArr.push(new RESymbol(char));\nconst alphaNumericRe = new REOr(alphaNumericArr);\nconst numsArr = [];\nfor (let i = 0; i <= 9; i++)\n    numsArr.push(new RESymbol('' + i));\nconst numsRe = new REOr(numsArr);\nexport default function compile(str, captures = []) {\n    let orGroups = [[]];\n    let currOut = orGroups[0];\n    let escape = false;\n    for (let i = 0; i < str.length; i++) {\n        let char = str.charAt(i);\n        if (escape) {\n            if (numChars.has(char)) { // if number, get capture group\n                // capture groups start at 1\n                if (0 < parseInt(char) && parseInt(char) - 1 < captures.length)\n                    currOut.push(captures[parseInt(char) - 1]);\n            }\n            else if (char == 'w') {\n                currOut.push(alphaNumericRe);\n            }\n            else if (char == 'd') {\n                currOut.push(numsRe);\n            }\n            else { // otherwise, push symbol\n                currOut.push(new RESymbol(char));\n            }\n            escape = false;\n            continue;\n        }\n        if (char == '\\\\') {\n            escape = true;\n        }\n        if (char == '.') {\n            currOut.push(allCharsRe);\n        }\n        if (!specialChars.has(char))\n            currOut.push(new RESymbol(char));\n        if (char == '[') {\n            let inside = [];\n            let negate = false;\n            if (str.charAt(i + 1) == '^') {\n                negate = true;\n                i++;\n            }\n            for (; str.charAt(i) != ']'; i++) {\n                inside.push(new RESymbol(str.charAt(i)));\n            }\n            if (negate) {\n                // TODO\n            }\n            else {\n                currOut.push(new REOr(inside));\n            }\n        }\n        if (char == '{') {\n            let start = i + 1;\n            for (; str.charAt(i) != '}'; i++)\n                ; // get end of {}\n            let x = str.substring(start, i).split(',');\n            let repeatMin = parseInt(x[0]);\n            let repeatMax = parseInt(x[0]);\n            if (x.length == 2)\n                repeatMax = parseInt(x[1]);\n            let inside = currOut.pop();\n            currOut.push(new RERepeat(inside, repeatMin, repeatMax));\n        }\n        if (char == '?') {\n            let inside = currOut.pop();\n            currOut.push(new RERepeat(inside, 0, 1));\n        }\n        if (char == '+') {\n            let inside = currOut.pop();\n            currOut.push(new REConcat([inside, new REStar(inside)]));\n        }\n        if (char == '*') {\n            currOut.push(new REStar(currOut.pop()));\n        }\n        if (char == '|') {\n            orGroups.push([]);\n            currOut = orGroups[orGroups.length - 1];\n        }\n        if (char == '(') {\n            let depth = 1; // current depth in parenthesization\n            let end = i + 1;\n            while (depth != 0) { // depth is 0 when we leave the parentheses\n                if (str.charAt(end) == '(')\n                    depth++;\n                if (str.charAt(end) == ')')\n                    depth--;\n                end++;\n            }\n            end--;\n            let sub = compile(str.substring(i + 1, end), captures);\n            currOut.push(sub);\n            captures.push(sub);\n            i = end;\n        }\n    }\n    let out = [];\n    for (let group of orGroups) {\n        out.push(new REConcat(group));\n    }\n    return new REOr(out);\n}\n// let nfa = compile('a|(x[abcde]z)').getNFA();\n// console.log(nfa.checkString('xdz'));\n// console.log(nfa.checkString('xyz'));\n// console.log(nfa.checkString('a'));\n// console.log(nfa.checkString('x'));\n// console.log(nfa.checkString('xez'));\n// console.log(nfa.checkString('xz'));\n","// extending the functionality of the builtin Set\nexport default class NSet extends Set {\n    // check if two sets are equal, i.e. they have the same elements\n    equals(set2) {\n        if (this.size != set2.size) {\n            return false;\n        }\n        for (let item of this) {\n            if (!set2.has(item)) {\n                return false;\n            }\n        }\n        ;\n        let set1 = this;\n        for (let item of set2) {\n            if (!this.has(item)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // return a new set with all the elements from both sets\n    union(set2) {\n        return new NSet([...this, ...set2]);\n    }\n    // mutate this set to add all elements of set2\n    addAll(set2) {\n        let set1 = this;\n        set2.forEach((item) => this.add(item));\n    }\n}\n","import NSet from \"./NSet\";\n// the empty string, used for epsilon transitions\nexport var EPSILON = '';\n// A class for a state in a nondeterministic finite automaton\nexport class NFAState {\n    // create a new state, which is either accepting or non-accepting\n    constructor(name, transitionDict, accepting) {\n        this.name = name;\n        this.transitionDict = transitionDict;\n        this.accepting = accepting;\n    }\n    // return the states that are reached by transitioning based on symbol\n    transition(symbol) {\n        if (!(symbol in this.transitionDict)) {\n            this.transitionDict[symbol] = new NSet();\n        }\n        return this.transitionDict[symbol];\n    }\n    // return whether or not this state is accepting\n    result() {\n        return this.accepting;\n    }\n    // add a transition rule for this state\n    addTransition(symbol, state) {\n        if (symbol in this.transitionDict) {\n            this.transitionDict[symbol].add(state);\n        }\n        else {\n            this.transitionDict[symbol] = new NSet([state]);\n        }\n    }\n}\n// a class for a nondeterministic finite automaton\nexport class NFA {\n    // create a new NFA, whose starting state is start\n    constructor(start, states) {\n        this.start = start;\n        this.states = states;\n    }\n    // check if an accept state is reached by this NFA after transitioning based on w\n    checkString(w) {\n        // return whether or not w is accepted\n        let currentStates = new NSet([this.start]);\n        // do initial epsilon transitions get to all starting states\n        currentStates = NFA.doAllEpsilonTransitions(currentStates);\n        let nextStates = new NSet();\n        for (let i = 0; i < w.length; i += 1) {\n            // transition based on current symbol\n            nextStates = NFA.transitionStates(currentStates, w[i]);\n            // do all possible epsilon transitions\n            nextStates = NFA.doAllEpsilonTransitions(nextStates);\n            currentStates = nextStates;\n            // console.log(w[i], NFA.stateNames(currentStates));\n        }\n        // console.log(NFA.stateNames(currentStates));\n        // if any state is an accepting state, then the NFA accepts the string\n        let accepting = false;\n        currentStates.forEach(function (state) {\n            if (state.result()) {\n                accepting = true;\n            }\n        });\n        return accepting;\n    }\n    // transition all states in given set based on given symbol\n    static transitionStates(states, symbol) {\n        // return set of states reached\n        let nextStates = new NSet();\n        states.forEach((state) => nextStates.addAll(state.transition(symbol)));\n        return nextStates;\n    }\n    // do epsilon transitions until no new state is reached\n    static doAllEpsilonTransitions(states) {\n        // return states (arg) as well as all states reached by doing all possible epsilon transitions\n        // does not mutate states\n        // e.g. if the NFA is qO -e-> q1 -e-> q2 and states is {q0}, return {q0, q1, q2}\n        let tempStates = new NSet();\n        while (!tempStates.equals(states)) {\n            tempStates = states;\n            states = states.union(NFA.transitionStates(states, EPSILON));\n        }\n        return states;\n    }\n    // return set with names of states\n    static stateNames(states) {\n        let names = new NSet();\n        states.forEach((state) => names.add(state.name));\n        return names;\n    }\n    // return set with names of all states in this NFA\n    getStateNames() {\n        return NFA.stateNames(this.states);\n    }\n    // return set of all accepting states in this NFA\n    getAcceptingStates() {\n        let out = new NSet();\n        for (let state of this.states) {\n            if (state.result()) {\n                out.add(state);\n            }\n        }\n        return out;\n    }\n    // mutating append function\n    append(other) {\n        // \"concatenates\" the NFAs, aka makes the accepting states of this\n        // lead to the starting state of other\n        this.getAcceptingStates().forEach(function (state) {\n            state.accepting = false;\n            state.addTransition(EPSILON, other.start);\n        });\n        this.states.addAll(other.states);\n    }\n}\n","import NSet from \"./NSet\";\nimport { EPSILON, NFAState, NFA } from \"./NFA\";\n// abstract class for parsed regular expressions\nexport class Regex {\n    // get the NFA which accepts the strings matched by this regex\n    getNFA() {\n        throw new Error('Not implemented!');\n    }\n}\nlet count = 0;\n// parsed regular expression for a single symbol\nexport class RESymbol extends Regex {\n    // create a new symbol regex\n    constructor(symbol) {\n        super();\n        if (symbol.length != 1) {\n            throw Error(\"Not a symbol!\");\n        }\n        this.symbol = symbol;\n    }\n    // get the NFA which accepts this regex's symbol \n    getNFA() {\n        let reject = new NFAState(this.symbol + \"0\" + count++, {}, false);\n        let accept = new NFAState(this.symbol + \"1\" + count++, {}, true);\n        reject.addTransition(this.symbol, accept);\n        let states = new NSet([reject, accept]);\n        return new NFA(reject, states);\n    }\n}\n// parsed regular expression for a sequence of regexes\nexport class REConcat extends Regex {\n    // create a new sequence of regexes\n    constructor(reList) {\n        super();\n        this.subs = reList;\n    }\n    // get the NFA which accepts this sequence of regexes\n    getNFA() {\n        // why was i filtering out empty sequences?\n        // keeping this code here in case i realize it's necessary\n        // if (this.subs.length == 0) {\n        // \tlet s = new NFAState(\"empty sequence\", {}, false);\n        // \treturn new NFA(s, new NSet([s]));\n        // }\n        // concatenate all NFAs in order to make NFA which accepts sequence\n        let startState = new NFAState(\"start_concat\", {}, true);\n        let start = new NFA(startState, new NSet([startState]));\n        for (let x of this.subs) {\n            start.append(x.getNFA());\n        }\n        return start;\n    }\n}\n// parsed regular expression for applying {num} to a regex,\n// aka repeating a regex num times\nexport class RERepeat extends Regex {\n    // create a new repeat regex\n    constructor(regex, minNum, maxNum) {\n        super();\n        this.inside = regex;\n        this.minNum = minNum;\n        this.maxNum = maxNum;\n    }\n    // get the NFA which accepts num repetitions of the inside regex\n    getNFA() {\n        let orList = [];\n        for (let i = this.minNum; i <= this.maxNum; i += 1) {\n            let concatList = [];\n            for (let j = 0; j < i; j += 1) {\n                concatList.push(this.inside);\n            }\n            orList.push(new REConcat(concatList));\n        }\n        return new REOr(orList).getNFA();\n    }\n}\n// parsed regular expression for applying * to a regex, aka repeating it\n// an arbitrary number of times\nexport class REStar extends Regex {\n    // create a new star regex\n    constructor(regex) {\n        super();\n        this.inside = regex;\n    }\n    // get the NFA which accepts arbitrary repetitions of the inside regex\n    getNFA() {\n        let start = new NFAState(\"*start\", {}, true);\n        let out = new NFA(start, new NSet([start]));\n        let insideNFA = this.inside.getNFA();\n        for (let state of insideNFA.getAcceptingStates()) {\n            state.addTransition(EPSILON, insideNFA.start);\n        }\n        out.append(insideNFA);\n        start.accepting = true;\n        return out;\n    }\n}\n// parsed regular expression for applying * to a regex\nexport class REPlus extends Regex {\n    // create a new star regex\n    constructor(regex) {\n        super();\n        this.inside = regex;\n    }\n    // get the NFA which accepts arbitrary repetitions of the inside regex\n    getNFA() {\n        return new REConcat([this.inside, new REStar(this.inside)]).getNFA();\n    }\n}\nexport class REOr extends Regex {\n    constructor(subs) {\n        super();\n        this.subs = subs;\n    }\n    getNFA() {\n        let start = new NFAState(\"orstart\", {}, false);\n        let states = new NSet([start]);\n        for (let s of this.subs) {\n            let curr = s.getNFA();\n            start.addTransition(EPSILON, curr.start);\n            states.addAll(curr.states);\n        }\n        return new NFA(start, states);\n    }\n}\nlet r = new RERepeat(new RESymbol('a'), 2, 3);\n// let r = new REConcat([new RESymbol('a'), new RESymbol('a')]);\nlet n = r.getNFA();\n// console.log(n.getStateNames());\n// console.log(n.checkString(''), '');\n// console.log(n.checkString('a'), 'a');\n// console.log(n.checkString('aa'), 'aa');\n// console.log(n.checkString('aaa'), 'aaa');\n// console.log(n.checkString('aaaa'), 'aaaa');\n// console.log(n.checkString('aaaaa'), 'aaaaa');\n// console.log(n.checkString('aaaaaa'), 'aaaaaa');\n// console.log(n.checkString('aaaaaaa'), 'aaaaaaa');\n// console.log(n.checkString('aaaaaaaa'), 'aaaaaaaa');\n","import NSet from './NSet';\nexport var Token;\n(function (Token) {\n    Token[Token[\"Symbol\"] = 0] = \"Symbol\";\n    Token[Token[\"Curly\"] = 1] = \"Curly\";\n    Token[Token[\"Square\"] = 2] = \"Square\";\n    Token[Token[\"SquareComp\"] = 3] = \"SquareComp\";\n    Token[Token[\"Paren\"] = 4] = \"Paren\";\n    Token[Token[\"Repeat\"] = 5] = \"Repeat\";\n    Token[Token[\"Star\"] = 6] = \"Star\";\n    Token[Token[\"Or\"] = 7] = \"Or\";\n    Token[Token[\"And\"] = 8] = \"And\";\n    Token[Token[\"Caret\"] = 9] = \"Caret\";\n    Token[Token[\"End\"] = 10] = \"End\";\n    Token[Token[\"Escape\"] = 11] = \"Escape\";\n})(Token || (Token = {}));\nconst metaToToken = {\n    \"{\": Token.Curly,\n    \"}\": Token.Curly,\n    \"[\": Token.Square,\n    \"]\": Token.Square,\n    \"(\": Token.Paren,\n    \")\": Token.Paren,\n    \"?\": Token.Repeat,\n    \"+\": Token.Repeat,\n    \"*\": Token.Star,\n    \"|\": Token.Or,\n    \"^\": Token.Caret,\n    \"$\": Token.End,\n    \"\\\\\": Token.Escape,\n};\nexport const brackets = new NSet([\"{\", \"}\", \"[\", \"[^\", \"]\", \"(\", \")\"]);\nexport const forward = new NSet([\"{\", \"[\", \"[^\", \"(\"]);\nconst forwardToBack = {\n    \"{\": \"}\",\n    \"[\": \"]\",\n    \"[^\": \"]\",\n    \"(\": \")\",\n};\n// return an array of pairs of tokens and symbols for the regex string\nexport function tokenize(w) {\n    let out = [];\n    // whether the next character should be escaped\n    let escape = false;\n    // whether the next characters are inside curly brackets\n    let curly = false;\n    let curlyInside = '';\n    for (let i = 0; i < w.length; i += 1) {\n        let s = w.charAt(i);\n        if (s in metaToToken && !escape && !curly) {\n            // if s is a metacharacter and it should not be escaped,\n            // get its token and add it to the list\n            if (metaToToken[s] == Token.Escape) {\n                escape = true;\n            }\n            else if (metaToToken[s] == Token.Curly) {\n                curly = true;\n            }\n            else {\n                out.push([metaToToken[s], s]);\n            }\n        }\n        else {\n            if (curly) {\n                if (metaToToken[s] == Token.Curly) {\n                    curly = false;\n                    out.push([metaToToken[s], curlyInside]);\n                    curlyInside = '';\n                }\n                else {\n                    curlyInside += s;\n                }\n            }\n            else {\n                // if s is not a metacharacter or if it is escaped, add it as a symbol\n                out.push([Token.Symbol, s]);\n                escape = false;\n            }\n        }\n    }\n    return reduceComplement(out);\n}\n// reduce adjacent [ and ^ to [^ in a partially-tokenized regex\n// helper function for tokenize\nfunction reduceComplement(lst) {\n    let out = [];\n    let i = 0;\n    while (i < lst.length) {\n        let currTok = lst[i][0];\n        let currStr = lst[i][1];\n        let nextTok = null;\n        if (i < lst.length - 1) {\n            nextTok = lst[i + 1][0];\n        }\n        if (currTok == Token.Square && currStr == \"[\" && nextTok == Token.Caret) {\n            // if [ and ^ are adjacent, push [^\n            out.push([Token.SquareComp, \"[^\"]);\n            // skip past the ^\n            i += 2;\n        }\n        else {\n            // otherwise just push the pair as-is\n            out.push(lst[i]);\n            i += 1;\n        }\n    }\n    return out;\n}\nlet digits = new NSet(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']);\n// return whether or not the brackets in the regex are well-formed,\n// i.e. all opened brackets are matched and closed, without overlaps,\n// and with only digits inside curly brackets\nexport function wellFormedBrackets(s) {\n    // make sure that only digits are within { }\n    let curly = false;\n    for (let char of s) {\n        if (curly && char == '}') {\n            curly = false;\n        }\n        if (curly && !(digits.has(char) || char == ',')) {\n            return false;\n        }\n        if (!curly && char == '{') {\n            curly = true;\n        }\n    }\n    // stack of closed brackets that should be matched\n    let stack = [];\n    for (let char of s) {\n        if (brackets.has(char)) {\n            if (forward.has(char)) {\n                // push the matching close bracket to the stack\n                stack.push(forwardToBack[char]);\n            }\n            else {\n                // if the current close bracket is not the same as the one at\n                // the top of the stack, then the brackets are not well-formed\n                if (stack.pop() != char) {\n                    return false;\n                }\n            }\n        }\n    }\n    // the stack should be empty at the end\n    return stack.length == 0;\n}\n// console.log(wellFormedBrackets('a{1,2}'));\n// console.log(tokenize('a{1,2}b{3,3}'));\n","import React, {useState} from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport FullPageRow from \"../components/FullPageRow\";\nimport Col from \"react-bootstrap/Col\";\nimport TitleRow from \"../components/TitleRow\";\nimport compile from \"../TSRegex/js/compiletest\";\nimport {wellFormedBrackets} from \"../TSRegex/js/Lexical\";\nimport doughnut from \"../images/02_doughnut_end_of_lvl_2.png\";\n\nlet soundcloud_div_style = {\n    fontSize: '10px',\n    color: '#cccccc',\n    lineBreak: 'anywhere',\n    wordBreak: 'normal',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    fontFamily: 'Interstate, Lucida Grande, Lucida Sans Unicode, Lucida Sans, Garuda, Verdana, Tahoma, sans -serif',\n    fontWeight: '100',\n};\n\n\nexport default function Projects(props) {\n    let startRe = '\\\\w(i)([dgiknru]| ){8}\\\\1t{2}a+.*!?';\n    let startString = 'rikin gurditta is cool!';\n\n    let [justLoaded, setJustLoaded] = useState(true);\n    let [accepted, setAccepted] = useState('');\n    let [inputRegex, setInputRegex] = useState(startRe);\n    let [inputText, setInputText] = useState(startString);\n\n    function handleRegexChange(event) {\n        let newRe = event.target.value;\n        if (newRe !== inputRegex) {\n            updateAccepted(newRe, inputText)\n        }\n        setInputRegex(newRe);\n\n    }\n\n    function handleTextChange(event) {\n        setInputText(event.target.value);\n        updateAccepted(inputRegex, event.target.value);\n    }\n\n    function updateAccepted(regex, text) {\n        if (regex === '' || text === '') {\n            setAccepted('');\n        } else if (!wellFormedBrackets(regex)) {\n            setAccepted('invalid regex');\n        } else {\n            console.log('regex:', regex);\n            console.log('string:', text);\n            let nfa = compile(regex).getNFA();\n            console.log(nfa);\n            setAccepted('' + nfa.checkString(text));\n        }\n    }\n\n    if (justLoaded) {\n        updateAccepted(startRe, startString);\n        setJustLoaded(false);\n    }\n\n    return (\n        <Container fluid>\n            <TitleRow style={{backgroundColor: '#DDDDFF'}}>\n                <Col md={4} className=\"my-auto\">\n                    <h1>Projects</h1>\n                </Col>\n                <Col md={4}/>\n            </TitleRow>\n            <FullPageRow>\n                <Col md={4} className=\"my-auto\">\n                    <h2>Regular Expression Compiler</h2>\n                    <p>\n                        My theory of computation class briefly mentioned <a\n                        href=\"https://en.wikipedia.org/wiki/Thompson%27s_construction\" target=\"_blank\">Thompson's\n                        algorithm</a>. It seemed interesting, so I decided to implement it as a compiler for a subset of\n                        Perl RegEx. It supports quantifiers with <code>{\"re{m,n}\"}?+*</code>, character groups\n                        with <code>[chars]</code>, union with <code>a|b</code>, the wildcards <code>.\\w\\d</code>, and\n                        capture groups with <code>(parentheses)</code>.\n                    </p>\n                    <p>\n                        <a href=\"https://github.com/rikingurditta/TSRegex\" target=\"_blank\">Here's</a> the GitHub repo!\n                    </p>\n                </Col>\n                <Col md={4} className=\"my-auto\">\n                    <h4>Try it out!</h4>\n                    <p>\n                        Regex:\n                        <br/>\n                        <input value={inputRegex} onChange={handleRegexChange}\n                               style={{width: '100%', fontFamily: 'monospace'}}/>\n                    </p>\n                    <p>\n                        Text:\n                        <br/>\n                        <input value={inputText} onChange={handleTextChange} style={{width: '100%'}}/>\n                    </p>\n                    <p>\n                        Accepted: <b><span\n                        style={{color: accepted === 'true' ? '#11DD11' : '#FF1111'}}>{accepted}</span></b>\n                    </p>\n                </Col>\n            </FullPageRow>\n            <FullPageRow style={{backgroundColor: '#EEEEFF'}}>\n                <Col md={4} lg={{span: 4, order: 2}} className=\"my-auto\">\n                    <h2>Bomberman</h2>\n                    <p>\n                        For my CSC207 - Software Design project, my group made three Android games that allowed for\n                        customization and online syncing. Within the group, my partner and I made a clone of Bomberman.\n                    </p>\n                    <p>\n                        <a href=\"https://github.com/rikingurditta/csc207\" target=\"_blank\">Here's</a> the GitHub repo!\n                    </p>\n                </Col>\n                <Col md={4} lg={{span: 4, order: 1}} className=\"my-auto\" style={{textAlign: 'center'}}>\n                    <iframe width=\"100%\" height=\"315px\" src=\"https://www.youtube.com/embed/PJKzzpyJ2fo\" frameBorder=\"0\"\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullScreen/>\n                </Col>\n            </FullPageRow>\n            <FullPageRow>\n                <Col md={4} className=\"my-auto\">\n                    <h2>Music</h2>\n                    <p>\n                        I've been producing electronic music and hip hop for a really long time. Here's something I\n                        dropped a couple years ago, it samples Nas's verses from <i>The World Is Yours</i> as well as\n                        clips of Brian Kernighan and DJ Premier.\n                    </p>\n                    <p>\n                        <a href=\"https://soundcloud.com/chocolate-milk-music\" target=\"_blank\">Here's</a> my SoundCloud!\n                    </p>\n                </Col>\n                <Col md={4} className=\"my-auto\" style={{textAlign: 'center'}}>\n                    <iframe width=\"80%\" height=\"350px\" scrolling=\"no\" frameBorder=\"no\" allow=\"autoplay\"\n                            src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/487898616&color=%236c4149&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true\"/>\n                    <div style={soundcloud_div_style}>\n                        <a href=\"https://soundcloud.com/chocolate-milk-music\" title=\"Chocolate Milk\" target=\"_blank\"\n                           style={{color: '#cccccc', textDecoration: 'none',}}>Chocolate Milk</a> · <a\n                        href=\"https://soundcloud.com/chocolate-milk-music/presidents\" title=\"Presidents\" target=\"_blank\"\n                        style={{color: '#cccccc', textDecoration: 'none'}}>Presidents</a></div>\n                </Col>\n            </FullPageRow>\n            <FullPageRow style={{backgroundColor: '#EEEEFF'}}>\n                <Col md={4} lg={{span: 4, order: 2}} className=\"my-auto\">\n                    <h2>3D Modelling</h2>\n                    <p>\n                        I'm currently learning how to create and texture 3D models with Blender. I'm currently following\n                        Blender Guru's tutorials, but I'll be starting my own project soon! I'll update this page when I\n                        do.\n                    </p>\n                </Col>\n                <Col md={4} lg={{span: 4, order: 1}} className=\"my-auto\" style={{textAlign: 'center'}}>\n                    <img src={doughnut} style={{width: '80%'}} alt=\"donut\"/>\n                </Col>\n            </FullPageRow>\n        </Container>\n    );\n}","import React, {useState} from 'react';\n\nexport default function Expandable(props) {\n    let [expanded, setExpanded] = useState(false);\n    return (\n        <div style={props.style}>\n            <span onClick={() => setExpanded(!expanded)}\n                  style={{cursor: 'pointer', textDecoration: 'underline'}}>\n                {props.outside} {expanded ? '-' : '+'}\n            </span>\n            <div hidden={!expanded}>\n                {props.children}\n            </div>\n        </div>\n    );\n}","import React, {Component} from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport {Link} from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\n\nconst TRANSITION_HEIGHT = 400;\n\nexport default class GlobalNavbar extends Component {\n    state = {bgAlpha: 0};\n\n    componentDidMount() {\n        document.addEventListener(\"scroll\", () => {\n            const bgAlpha = window.scrollY < TRANSITION_HEIGHT ? window.scrollY / TRANSITION_HEIGHT : 1;\n            this.setState({bgAlpha: bgAlpha});\n            console.log(bgAlpha);\n        });\n    }\n\n    render() {\n        return (\n            <Navbar sticky=\"top\" expand=\"lg\" style={{backgroundColor: `rgba(255, 255, 255, 1`}}>\n                {/*navbar with fading colour: <Navbar sticky=\"top\" expand=\"lg\" style={{backgroundColor: `rgba(255, 255, 255, ${this.state.bgAlpha})`}}>*/}\n                <Navbar.Brand as={Link} to=\"/\" push>Rikin</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        <Nav.Link as={Link} to=\"/\" push>Home</Nav.Link>\n                        {\n                            this.props.sitePages.map(page =>\n                                <Nav.Link as={Link} to={'/' + page.path} push key={page.path}>{page.name}</Nav.Link>\n                            )\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}","import Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default function Footer(props) {\n    return (\n        <Container fluid>\n            <Row className=\"justify-content-md-center \"\n                 style={{minHeight: '30vh', backgroundColor: '#EEEEEE'}}>\n                <Col md={4} className=\"my-auto\">\n                    <h2>Contact</h2>\n                </Col>\n                <Col md={4} className=\"my-auto\">\n                    <p style={{textAlign: 'center'}}>\n                        <a href=\"https://github.com/rikingurditta\">\n                            <svg className=\"octicon octicon-mark-github v-align-middle\" width=\"64\" height=\"64\"\n                                 viewBox=\"0 0 16 16\"\n                                 version=\"1.1\" aria-hidden=\"true\">\n                                <path fillRule=\"evenodd\"\n                                      d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"/>\n                            </svg>\n                        </a>\n                        {\"\\t\"}\n                        <a href=\"https://www.linkedin.com/in/rikin-gurditta/\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\" data-supported-dps=\"64x64\"\n                                 viewBox=\"0 0 50 50\"\n                                 focusable=\"false\">\n                                <g fill=\"none\" fillRule=\"evenodd\">\n                                    <rect className=\"bug-text-color\" fill=\"#FFF\" x=\"1\" y=\"1\" width=\"64\" height=\"64\"\n                                          rx=\"4\"/>\n                                    <path\n                                        d=\"M0 4.01A4.01 4.01 0 014.01 0h39.98A4.01 4.01 0 0148 4.01v39.98A4.01 4.01 0 0143.99 48H4.01A4.01 4.01 0 010 43.99V4.01zM19 18.3h6.5v3.266C26.437 19.688 28.838 18 32.445 18 39.359 18 41 21.738 41 28.597V41.3h-7V30.159c0-3.906-.937-6.109-3.32-6.109-3.305 0-4.68 2.375-4.68 6.109V41.3h-7v-23zM7 41h7V18H7v23zm8-30.5a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0z\"\n                                        className=\"background\" fill=\"#0077B5\"/>\n                                </g>\n                            </svg>\n                        </a>\n                    </p>\n                    <p style={{fontSize: '12px', textAlign: 'center'}}>\n                        Personal email: <a href=\"mailto:rikingurditta@gmail.com\">rikingurditta@gmail.com</a>\n                        <br/>\n                        School email: <a href=\"mailto:rikin.gurditta@mail.utoronto.ca\">rikin.gurditta@mail.utoronto.ca</a>\n                        <br/>\n                        I use he/him pronouns\n                    </p>\n                </Col>\n            </Row>\n        </Container>\n    );\n}","import {useEffect} from \"react\";\nimport {useLocation} from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n    const {pathname} = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}","import React from 'react';\nimport './App.scss';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Homepage from \"./pages/Homepage\";\nimport Projects from \"./pages/Projects\";\nimport Experience from \"./pages/Experience\";\nimport Academics from \"./pages/Academics\";\nimport GlobalNavbar from \"./components/GlobalNavbar\";\nimport Footer from \"./components/Footer\";\nimport ScrollToTop from \"./components/ScrollToTop\";\n\nconst pages = [\n    {\n        name: 'Projects',\n        path: 'projects',\n        component: Projects\n    },\n    {\n        name: 'Experience',\n        path: 'experience',\n        component: Experience\n    },\n    {\n        name: 'Academics',\n        path: 'academics',\n        component: Academics\n    },\n];\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <GlobalNavbar sitePages={pages}/>\n                <ScrollToTop/>\n                <Switch>\n                    <Route path=\"/\" exact component={Homepage}/>\n                    {\n                        pages.map(page =>\n                            <Route path={'/' + page.path}\n                                   component={page.component}\n                                   key={page.path}/>\n                        )\n                    }\n                </Switch>\n                <Footer/>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport TitleRow from \"../components/TitleRow\";\nimport Row from \"react-bootstrap/Row\";\n\nexport default function Experience() {\n    return (\n        <Container fluid>\n            <TitleRow style={{backgroundColor: '#FFDDDD'}}>\n                <Col md={4} className=\"my-auto\">\n                    <h1>My experience</h1>\n                </Col>\n                <Col md={4}/>\n            </TitleRow>\n            <Row className=\"justify-content-center text-content\">\n                <Col md={4}>\n                    <h2>Centivizer</h2>\n                    <p>\n                        Game/frontend development\n                        <br/>\n                        Summer 2019, Summer 2020\n                    </p>\n                </Col>\n                <Col md={4}>\n                    <p>\n                        <a href=\"https://www.centivizer.com/\" target=\"_blank\">Centivizer</a> is a startup based in\n                        UofT's <a href=\"https://imedia.mie.utoronto.ca/\" target=\"_blank\">Interactive Media Lab</a>.\n                    </p>\n                    <p>\n                        In 2019, I worked on a 3D driving simulator game for the <i>Experiential Centivizer</i> project.\n                        I worked on:\n                    </p>\n                    <ul>\n                        <li>3D game code</li>\n                        <li>3D assets (some modelling and texturing)</li>\n                        <li>UX and senior-oriented design</li>\n                    </ul>\n                    <p>\n                        In 2020, I worked on <i>Cognitive Centivizer</i>, a suite of whack-a-mole games meant to assess\n                        different aspects of cognitive ability. I worked on:\n                    </p>\n                    <ul>\n                        <li>implementing new versions of the games</li>\n                        <li>caching and other performance/stability concerns</li>\n                        <li>planning, designing, and implementing full rewrite of the codebase with React.js</li>\n                        <li>\n                            the <a href=\"https://clyp.it/sdjwuirh\" target=\"_blank\">music</a> and sound design\n                            for the game\n                        </li>\n                    </ul>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-center text-content\">\n                <Col md={4}>\n                    <h2>NATIONAL</h2>\n                    <p>\n                        Research and strategy\n                        <br/>\n                        Summer 2019\n                    </p>\n                </Col>\n                <Col md={4}>\n                    <p>\n                        <a href=\"https://www.national.ca/en/\" target=\"_blank\">NATIONAL Public Relations</a> is a large\n                        Canadian public relations company. I was an intern for the Research and Strategy team at their\n                        Toronto office.\n                    </p>\n                    <p>\n                        I worked on:\n                    </p>\n                    <ul>\n                        <li>media monitoring</li>\n                        <li>\n                            data processing and analysis in Excel (as well as automation of these tasks with macros\n                            and scripts)\n                        </li>\n                        <li>\n                            automating report generation based on Excel sheets of data\n                        </li>\n                        <li>\n                            developing web scraping scripts, bug testing large-scale web scraping services\n                        </li>\n                    </ul>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-center text-content\">\n                <Col md={4}>\n                    <h2>UofT Computer Graphics Club</h2>\n                    <p>\n                        Executive Member, VP External\n                        <br/>\n                        2019 - Now\n                    </p>\n                </Col>\n                <Col md={4}>\n                    <p>\n                        <a href=\"https://utcg.club\" target=\"_blank\">UTCG</a> organizes workshops/tutorials, research\n                        talks, industry events, field trips, and social events for computer graphics enthusiasts at\n                        UofT.\n                    </p>\n                    <p>\n                        As an exec/VP, I've:\n                    </p>\n                    <ul>\n                        <li>worked on (and currently update) the club's <a href=\"https://utcg.club\"\n                                                                           target=\"_blank\">website</a></li>\n                        <li>\n                            organized the Rapid Fire Research Talks event, where <a\n                            href=\"https://www.dgp.toronto.edu/\" target=\"_blank\">DGP</a> researchers presented their\n                            own work so that students could see research happening at UofT\n                        </li>\n                        <li>\n                            contributed to organizing UTCG Projects, an initiative to help students create projects\n                            in computer graphics during the online school year\n                        </li>\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React from 'react';\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Expandable from \"../components/Expandable\";\nimport TitleRow from \"../components/TitleRow\";\n\nexport default function Academics() {\n    return (\n        <Container fluid>\n            <TitleRow style={{backgroundColor: '#DDFFDD'}}>\n                <Col md={4} className=\"my-auto\">\n                    <h1>Academics</h1>\n                </Col>\n                <Col md={4}/>\n            </TitleRow>\n            <Row className=\"justify-content-md-center text-content\">\n                <Col md={4}>\n                    <h2>Teaching</h2>\n                </Col>\n                <Col md={4} className=\"my-auto\">\n                    <p>In the Fall 2020 semester I was a TA for MAT135 - Calculus 1. It was pretty fun! I got to meet\n                        lots of students and help them get through a pretty tough course. I hope to TA again sometime in\n                        the future!\n                    </p>\n                    <p>\n                        If you were one of my students, <a href=\"https://forms.gle/WoSfM34xCnz4NRma7\"\n                                                           target=\"_blank\">here's</a> a link to my anonymous feedback\n                        form.\n                    </p>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-md-center text-content\">\n                <Col md={4}>\n                    <h2>Computer Science</h2>\n                </Col>\n                <Col md={4} className=\"my-auto\">\n                    <p>\n                        I'm focusing in computer graphics, and I hope to one day work in the field, either doing\n                        research or working on cool stuff like VR tech or movie rendering. This year I'm the VP External\n                        for <a href=\"https://utcg.club/\" target=\"_blank\">UofT Computer Graphics Club</a>, and I was a\n                        student volunteer for a huge computer graphics conference called <a target=\"_blank\"\n                                                                                            href=\"https://s2020.siggraph.org/\">SIGGRAPH</a>.\n                    </p>\n                    <Expandable outside={<span>Courses I'm taking this semester</span>}>\n                        <ul>\n                            <li>\n                                <Expandable outside={<span>CSC317 - Computer graphics</span>}>\n                                    <p className=\"expand-text\">\n                                        <a href=\"https://rikingurditta.github.io/csc317\" target=\"_blank\">Here</a> are\n                                        my notes for the course.\n                                    </p>\n                                </Expandable>\n                            </li>\n                            <li>CSC367 - Parallel programming</li>\n                        </ul>\n                    </Expandable>\n                    <br/>\n                    <Expandable outside={<span>Courses I've taken</span>}>\n                        <ul>\n                            <li>CSC108 - Intro to programming (Fall 2018)</li>\n                            <li>CSC148 - Intro to computer science (Winter 2019)</li>\n                            <li>CSC165 - Mathematical expression and reasoning for CS (Fall 2018)</li>\n                            <li>\n                                <Expandable outside={<span>CSC207 - Software design (Fall 2019)</span>}>\n                                    <p className=\"expand-text\">\n                                        This course was pretty fun. The course project was to design and implement games\n                                        for Android in teams. Within my team of 6, my friend and I made Bomberman. It\n                                        was a lot of fun not only designing the software architecture, but also\n                                        implementing it as well as creating all the assets.\n                                        <br/>\n                                        <a href=\"https://github.com/rikingurditta/csc207\" target=\"_blank\">Here</a> is my\n                                        course project. (Yes, almost all the <i>beautiful</i> art for Bomberman was done\n                                        by me.)\n                                    </p>\n                                </Expandable>\n                            </li>\n                            <li>\n                                <Expandable outside={<span>CSC209 - Systems programming (Winter 2020)</span>}>\n                                    <p className=\"expand-text\">\n                                        I enjoyed this course. It wasn't very difficult, it had relatively low workload,\n                                        and the assingments were kinda cool. On top of learning the basics of C and\n                                        systems programming, we also learned a tiny bit about how we deal with\n                                        messages being broken up as they're sent over a network. We used this to\n                                        implement a command line-based message board. Fun stuff.\n                                    </p>\n                                </Expandable>\n                            </li>\n                            <li>CSC236 - Intro to the theory of computation (Fall 2019)</li>\n                            <li>\n                                <Expandable outside={<span>CSC258 - Computer organization</span>}>\n                                    <p className=\"expand-text\">This course sucked.</p>\n                                </Expandable>\n                            </li>\n                            <li>\n                                <Expandable outside={<span>CSC263 - Data structures and analysis (Winter 2020)</span>}>\n                                    <p className=\"expand-text\">\n                                        I enjoyed this course! It was cool seeing how data structures I've been using\n                                        actually work under the hood, the cool stuff you can do with algorithms like\n                                        DFS, and cool analysis techniques like decision trees.<br/>\n                                        <a href=\"https://rikingurditta.github.io/csc263/\" target=\"_blank\">Here</a> are\n                                        my notes for the course.\n                                    </p>\n                                </Expandable>\n                            </li>\n                            <li>\n                                <Expandable outside={<span>CSC369 - Operating systems (Summer 2020)</span>}>\n                                    <p className=\"expand-text\">\n                                        This course had some pretty interesting and important material, and the\n                                        first assignment (design and implement your own file system) was pretty fun. But\n                                        it was not organized very well, and it was <i>a lot</i> of work.<br/>\n                                        <a href=\"https://rikingurditta.github.io/csc369/\" target=\"_blank\">Here</a> are\n                                        my notes for the course.\n                                    </p>\n                                </Expandable>\n                            </li>\n                            <li>\n                                <Expandable\n                                    outside={\n                                        <span>CSC373 - Algorithm design, analysis, and complexity (Fall 2020)</span>}>\n                                    <p className=\"expand-text\">\n                                        This course was a nightmare. <a href=\"https://rikingurditta.github.io/csc373/\"\n                                                                        target=\"_blank\">Here</a> are my notes on most of\n                                        the content.\n                                    </p>\n                                </Expandable>\n                            </li>\n                            <li>\n                                <Expandable\n                                    outside={<span>CSC417 - Physics-based animation (Fall 2020)</span>}>\n                                    <p className=\"expand-text\">\n                                        This was my favourite class of the Fall 2020 semester. I learned a lot! We\n                                        started with simulating deformable bodies made of springs, then learned how to\n                                        use the finite element method to simulate continuous materials. We used this to\n                                        simulate some pretty realistic-looking cloth! Then we simulated rigid bodies,\n                                        which were pretty tricky. For my final project, my partner and I made a pretty\n                                        crappy fluid simulator. <a\n                                        href=\"https://github.com/rikingurditta/csc417-tilt-paint\"\n                                        target=\"_blank\">Here</a> it is!\n                                        <br/>\n                                        The prof was great and the assignments were fun, though they are a lot of\n                                        work. <a href=\"https://www.youtube.com/channel/UCIM0HrQVDcUYdrZvSwuUJgA\"\n                                                 target=\"_blank\">Here's</a> the prof's YouTube channel with the lectures\n                                        for the course. I didn't take any notes to be honest.\n                                    </p>\n                                </Expandable>\n                            </li>\n                            <li> CSC419 - Geometry processing (Fall 2020)</li>\n                        </ul>\n                    </Expandable>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-md-center text-content\">\n                <Col md={4}>\n                    <h2>Mathematics</h2>\n                </Col>\n                <Col md={4} className=\"my-auto\">\n                    <p>\n                        My second major is in math, mainly because I like math.\n                    </p>\n                    <Expandable outside={<span>Courses I'm taking this semester</span>}>\n                        <ul>\n                            <li>\n                                <Expandable outside={<span>MAT347 - Groups, rings, and fields (Fall-Winter)</span>}>\n                                    <p className=\"expand-text\">\n                                        <a href=\"https://rikingurditta.github.io/mat347/\" target=\"_blank\">Here</a> are\n                                        my notes for the course (in-progress).\n                                    </p>\n                                </Expandable>\n                            </li>\n                            <li>MAT315 - Introduction to Number Theory</li>\n                            <li>\n                                <Expandable outside={<span>MAT367 - Differential geometry</span>}>\n                                    <p className=\"expand-text\">\n                                        <a href=\"https://rikingurditta.github.io/mat367/\" target=\"_blank\">Here</a> are\n                                        my notes for the course (in-progress).\n                                    </p>\n                                </Expandable>\n                            </li>\n                        </ul>\n                    </Expandable>\n                    <br/>\n                    <Expandable outside={<span>Courses I've taken</span>}>\n                        <ul>\n                            <li>MAT157 - Analysis 1</li>\n                            <li>MAT223 - Linear algebra 1</li>\n                            <li>MAT237 - Multivariable calculus</li>\n                            <li>MAT244 - Intro to ordinary differential equations</li>\n                            <li>MAT247 - Algebra 2</li>\n                            <li>\n                                <Expandable outside={<span>MAT327 - Intro to topology</span>}>\n                                    <p className=\"expand-text\">\n                                        This course was great! I learned a lot about point-set topology, and got a nice\n                                        taste of algebraic topology. The professor, <a href=\"https://malors.com/\"\n                                                                                       target=\"_blank\">Malors</a>,\n                                        was tough on us but he really cared about our learning.\n                                        <br/>\n                                        <a href=\"https://rikingurditta.github.io/mat327/\" target=\"_blank\">Here</a> are\n                                        my notes for the course.\n                                    </p>\n                                </Expandable>\n                            </li>\n                            <li>\n                                <Expandable\n                                    outside={<span>STA257 - Probability and Statistics I (Fall 2019)</span>}>\n                                    <p className=\"expand-text\">\n                                        🤮\n                                    </p>\n                                </Expandable>\n                            </li>\n                        </ul>\n                    </Expandable>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-md-center text-content\">\n                <Col md={4}>\n                    <h2>Breadth and Interest</h2>\n                </Col>\n                <Col md={4} className=\"my-auto\">\n                    <p>\n                        I'm interested in a lot of different stuff. Here are some courses I've taken at UofT that aren't\n                        about computer science or mathematics.\n                    </p>\n                    <Expandable outside={<span>Courses I've taken</span>}>\n                        <ul>\n                            <li>\n                                <Expandable\n                                    outside={<span>PHY151+PHY152 - Foundations of Physics I and II (Fall 2018 - Winter 2019)</span>}>\n                                    <p className=\"expand-text\">\n                                        I took these courses because I planned on studying physics if I didn't get into\n                                        CS. However these courses kinda taught me that physics isn't my thing. I like\n                                        it, but it's pretty spooky. I'll stick to math.\n                                        <br/>\n                                        They were pretty good courses though! Especially PHY151, which was taught by the\n                                        amazing <a href=\"https://www8.physics.utoronto.ca/~dfvj/\" target=\"_blank\">Daniel\n                                        F. V. James</a>. 😍\n                                    </p>\n                                </Expandable>\n                            </li>\n                            <li>ENV200 - Intro to Environmental Studies (Fall 2019)</li>\n                            <li>CCR199 - Russia at War (Winter 2019)</li>\n                            <li>EEB215 - Conservation Biology (Summer 2020)</li>\n                            <li>\n                                <Expandable outside={<span>LIN200 - Intro to Language (Fall 2020)</span>}>\n                                    <p className=\"expand-text\">\n                                        <a href=\"https://rikingurditta.github.io/lin200/\" target=\"_blank\">Here</a> are\n                                        my notes for the course.\n                                    </p>\n                                </Expandable></li>\n                        </ul>\n                    </Expandable>\n                </Col>\n            </Row>\n            <Row className=\"justify-content-md-center text-content\">\n                <Col md={4}>\n                    <h2>Course Notes</h2>\n                </Col>\n                <Col md={4} className=\"my-auto\">\n                    <p>\n                        Here are all of the course notes that I've typed up nicely and uploaded!\n                    </p>\n                    <ul>\n                        <li>\n                            <a href=\"https://rikingurditta.github.io/csc263/\" target=\"_blank\">CSC263 - Data structures\n                                and analysis</a>\n                        </li>\n                        <li>\n                            <a href=\"https://rikingurditta.github.io/csc317/\" target=\"_blank\">CSC317 - Computer\n                                graphics</a> (in progress)\n                        </li>\n                        <li>\n                            <a href=\"https://rikingurditta.github.io/csc369/\" target=\"_blank\">CSC369 - Operating\n                                systems</a>\n                        </li>\n                        <li>\n                            <a href=\"https://rikingurditta.github.io/csc373/\" target=\"_blank\">CSC373 - Algorithm design,\n                                analysis, and complexity</a>\n                        </li>\n                        <li>\n                            <a href=\"https://rikingurditta.github.io/mat327/\" target=\"_blank\">MAT327 - Intro to\n                                topology</a>\n                        </li>\n                        <li>\n                            <a href=\"https://rikingurditta.github.io/mat347/\" target=\"_blank\">MAT347 - Groups, fields,\n                                and rings</a> (in progress)\n                        </li>\n                        <li>\n                            <a href=\"https://rikingurditta.github.io/mat367/\" target=\"_blank\">MAT367 - Differential\n                                Geometry</a> (in progress)\n                        </li>\n                        <li>\n                            <a href=\"https://rikingurditta.github.io/lin200/\" target=\"_blank\">LIN200 - Intro to\n                                Language</a>\n                        </li>\n                    </ul>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}